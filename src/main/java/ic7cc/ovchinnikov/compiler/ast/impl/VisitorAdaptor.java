/*
 * Generated by classgen, version 1.5
 * 31.07.13 15:50
 */
package ic7cc.ovchinnikov.compiler.ast.impl;

import ic7cc.ovchinnikov.compiler.ast.Operation;
import ic7cc.ovchinnikov.compiler.ast.Visitor;
import ic7cc.ovchinnikov.compiler.ast.node.*;

public abstract class VisitorAdaptor implements Visitor {

    @Override
    public void visit(Operation operation) {

    }

    @Override
    public void visit(StatementListNode statementListNode) {

    }

    @Override
    public void visit(VariableListNode variableListNode) {

    }

    @Override
    public void visit(NameListNode nameListNode) {

    }

    @Override
    public void visit(ExpressionListNode expressionListNode) {

    }

    @Override
    public void visit(FieldListNode fieldListNode) {

    }

    @Override
    public void visit(BlockNode blockNode) {

    }

    @Override
    public void visit(NameNode nameNode) {

    }

    @Override
    public void visit(TableConstructorNode tableConstructorNode) {

    }

    @Override
    public void visit(ReturnStatement returnStatement) {

    }

    @Override
    public void visit(ReturnNode reTurn) {

    }

    @Override
    public void visit(BreakNode bReak) {

    }

    @Override
    public void visit(Statement statement) {

    }

    @Override
    public void visit(AssignmentNode asm) {

    }

    @Override
    public void visit(FunctionCallStatementNode functionCallStatementNode) {

    }

    @Override
    public void visit(DoBlockNode doBlockNode) {

    }

    @Override
    public void visit(WhileBlockNode whileBlockNode) {

    }

    @Override
    public void visit(RepeatUntilNode repeatUntilNode) {

    }

    @Override
    public void visit(IfThenElseBlockNode ifThenElseBlockNode) {

    }

    @Override
    public void visit(ForBlockNode forBlockNode) {

    }

    @Override
    public void visit(ForInBlockNode forInBlockNode) {

    }

    @Override
    public void visit(LocalFunctionDefinitionNode localFunctionDefinitionNode) {

    }

    @Override
    public void visit(LocalNode localNode) {

    }

    @Override
    public void visit(Expression expression) {

    }

    @Override
    public void visit(NilNode nilNode) {

    }

    @Override
    public void visit(BooleanExpressionNode booleanExpressionNode) {

    }

    @Override
    public void visit(NumeralExpressionNode numeralExp) {

    }

    @Override
    public void visit(LiteralStringExpressionNode literalStringExp) {

    }

    @Override
    public void visit(DotDotDotNode dotDotDotNode) {

    }

    @Override
    public void visit(PrefixExpressionNode preExp) {

    }

    @Override
    public void visit(TableConstructorExpressionNode tableConstructorExp) {

    }

    @Override
    public void visit(BinaryOperationNode binaryOperationNode) {

    }

    @Override
    public void visit(UnaryOperationNode unaryOperationNode) {

    }

    @Override
    public void visit(FunctionExpressionNode functionExp) {

    }

    @Override
    public void visit(Variable variable) {

    }

    @Override
    public void visit(VariableNode variableNode) {

    }

    @Override
    public void visit(VariableTabIndexNode varTabIndex) {

    }

    @Override
    public void visit(PrefixExpression prefixExpression) {

    }

    @Override
    public void visit(PrefixExpressionVariableNode prefixExpressionVariableNode) {

    }

    @Override
    public void visit(PrefixExpressionFunctionCallNode prefixExpressionFunctionCallNode) {

    }

    @Override
    public void visit(PrefixExpressionExpressionNode prefixExpressionExpressionNode) {

    }

    @Override
    public void visit(FunctionCall functionCall) {

    }

    @Override
    public void visit(FunctionCallNode functionCallNode) {

    }

    @Override
    public void visit(FunctionCallSelfNode functionCallSelfNode) {

    }

    @Override
    public void visit(FunctionName functionName) {

    }

    @Override
    public void visit(FunctionNameVarNode funcNameVar) {

    }

    @Override
    public void visit(FunctionNameVarDotFunctionNameNode funcNameVarDotFuncName) {

    }

    @Override
    public void visit(FunctionNameColonVarNode functionNameColonVarNode) {

    }

    @Override
    public void visit(Field field) {

    }

    @Override
    public void visit(FieldLeftRightExpressionNode fieldLeftRightExpressionNode) {

    }

    @Override
    public void visit(FieldNameExpressionNode fieldNameExpressionNode) {

    }

    @Override
    public void visit(FieldExpressionNode fieldExpressionNode) {

    }

    public void visit() {}
}
