/*
 * Generated by classgen, version 1.5
 * 31.07.13 15:50
 */
package ic7cc.ovchinnikov.compiler.ast.impl;

import ic7cc.ovchinnikov.compiler.ast.Operation;
import ic7cc.ovchinnikov.compiler.ast.Visitor;
import ic7cc.ovchinnikov.compiler.ast.node.*;

public abstract class VisitorAdaptor implements Visitor {

    @Override
    public void visit(Operation operation) {

    }

    @Override
    public void visit(StatList statList) {

    }

    @Override
    public void visit(VarList varList) {

    }

    @Override
    public void visit(NameList nameList) {

    }

    @Override
    public void visit(ExpList expList) {

    }

    @Override
    public void visit(FieldList fieldList) {

    }

    @Override
    public void visit(Block block) {

    }

    @Override
    public void visit(Name name) {

    }

    @Override
    public void visit(TableConstructor tableConstructor) {

    }

    @Override
    public void visit(RetStat retStat) {

    }

    @Override
    public void visit(Return reTurn) {

    }

    @Override
    public void visit(Break bReak) {

    }

    @Override
    public void visit(Stat stat) {

    }

    @Override
    public void visit(Assignment asm) {

    }

    @Override
    public void visit(FuncCallStatement funcCallStatement) {

    }

    @Override
    public void visit(DoBlock doBlock) {

    }

    @Override
    public void visit(WhileBlock whileBlock) {

    }

    @Override
    public void visit(RepeatUntil repeatUntil) {

    }

    @Override
    public void visit(IfThenElseBlock ifThenElseBlock) {

    }

    @Override
    public void visit(ForBlock forBlock) {

    }

    @Override
    public void visit(ForInBlock forInBlock) {

    }

    @Override
    public void visit(LocalFunctionDef localFunctionDef) {

    }

    @Override
    public void visit(LocalDecl localDecl) {

    }

    @Override
    public void visit(Exp exp) {

    }

    @Override
    public void visit(Nil nil) {

    }

    @Override
    public void visit(BooleanExp booleanExp) {

    }

    @Override
    public void visit(NumeralExp numeralExp) {

    }

    @Override
    public void visit(LiteralStringExp literalStringExp) {

    }

    @Override
    public void visit(Dots dots) {

    }

    @Override
    public void visit(PreExp preExp) {

    }

    @Override
    public void visit(TableConstructorExp tableConstructorExp) {

    }

    @Override
    public void visit(Binop binop) {

    }

    @Override
    public void visit(Unop unop) {

    }

    @Override
    public void visit(FunctionExp functionExp) {

    }

    @Override
    public void visit(Var var) {

    }

    @Override
    public void visit(Variable variable) {

    }

    @Override
    public void visit(VarTabIndex varTabIndex) {

    }

    @Override
    public void visit(PrefixExp prefixExp) {

    }

    @Override
    public void visit(PrefixExpVar prefixExpVar) {

    }

    @Override
    public void visit(PrefixExpFuncCall prefixExpFuncCall) {

    }

    @Override
    public void visit(PrefixExpExp prefixExpExp) {

    }

    @Override
    public void visit(FunctionCall functionCall) {

    }

    @Override
    public void visit(FuncCall funcCall) {

    }

    @Override
    public void visit(FuncCallSelf funcCallSelf) {

    }

    @Override
    public void visit(FuncName funcName) {

    }

    @Override
    public void visit(FuncNameVar funcNameVar) {

    }

    @Override
    public void visit(FuncNameVarDotFuncName funcNameVarDotFuncName) {

    }

    @Override
    public void visit(FuncNameColonVar funcNameColonVar) {

    }

    @Override
    public void visit(Field field) {

    }

    @Override
    public void visit(FieldLeftRightExp fieldLeftRightExp) {

    }

    @Override
    public void visit(FieldNameExp fieldNameExp) {

    }

    @Override
    public void visit(FieldExp fieldExp) {

    }

    public void visit() {}
}
